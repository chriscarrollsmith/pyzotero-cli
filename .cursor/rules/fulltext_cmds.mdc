---
description: `pyzotero` documentation for working with full-text content
globs: zotcli_commands/fulltext_cmds.py
alwaysApply: false
---

This document contains the portion of the `pyzotero` documentation that corresponds to the full-text content functionality in our CLI wrapper.

# Full-Text Commands

## Retrieving Full-Text Content

```python
# Get new full-text content since a specific version
zot.new_fulltext(since)
```

Parameters:
- `since`: a library version string, e.g. "1085"

Returns a dict containing item keys and library versions newer than the provided version.

Example of returned data:
```python
{
    u'229QED6I': 747,
    u'22TGJFS2': 769,
    u'23SZWREM': 764
}
```

```python
# Get full-text for an item
zot.fulltext_item(itemID[, search/request parameters])
```

Parameters:
- `itemID`: a Zotero item ID

Returns a dict containing full-text data for the given attachment item. `indexedChars` and `totalChars` are used for text documents, while `indexedPages` and `totalPages` are used for PDFs.

Example of returned data:
```python
{
    "content": "This is full-text content.",
    "indexedPages": 50,
    "totalPages": 50
}
```

## Setting Full-Text Content

```python
# Set full-text data for an item
zot.set_fulltext(itemID, payload)
```

Parameters:
- `itemID`: should correspond to an existing attachment item
- `payload`: a dict containing three keys
  - `content`: the full-text content
  - For text documents: `indexedChars` and `totalChars` OR
  - For PDFs: `indexedPages` and `totalPages`

Example payload:
```python
{
    "content": "This is full-text content.",
    "indexedPages": 50,
    "totalPages": 50
}
```

Returns a boolean indicating success. 